<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>My movies</title>
        <script type="text/javascript" src="jquery-1.6.1.min.js"></script>
        <link rel="stylesheet" type="text/css" href="common.css"/>
        <link rel="stylesheet" type="text/css" href="themes/dark/style.css"/>
    </head>
    <body>
		<div id="modal"></div>
		<div id="header">
			<a id="btunmatched" class="hidden">Unmathched</a>
			-
			<a class="btrefresh">Refresh <span class="refreshtime">0</span>ms</a>
		</div>
		<div id="movieswrapper">
			<div id="movies"></div>
		</div>
		
		<div id="templates">
			<div class="movieclassic">
				<img class="cover" />
				<div class="content">
					<h2></h2>
					<p class="directors"></p>
                    <p class="principals"></p>
					<p class="genres"></p>
					<p class="plot"></p>
					<p class="actions">
						<a class="star" target="_blank"></a> <span class="sep"></span>
						<a class="allocine" target="_blank">Allociné</a> <span class="sep"></span>
						<a class="play">Play</a> <span class="sep"></span>
						<a class="showfiles"></a> <span class="sep"></span>
						<a class="delmatch">Delete match</a>
					</p>
					<p class="files hidden"></p>
				</div>
				<div class="clear"></div>
			</div>
			<div class="matcher">
				<div class="content">
					<a class="file"></a>
					<br/>
					<input type="text" name="q"/>
					-
					<a class="btignore">Add to ignore list</a>
					-
					<a class="btskip">Skip</a>
				</div>
				<div class="results"></div>
			</div>
			<div class="result">
				<a class="btok"></a>
				<b class="title"></b><br/>
				<span class="infos"></span>
			</div>
		</div>
        <script type="text/javascript">
            $(function () {
				$.fn.m = function(){
					var e = this;
					while(e.length){
						var d = e.data('m');
						if(d)return d;
						e = e.parent();
					}
				};
				
				var srv = {
					call:function(action, params, cb){
						return $.getJSON(base + '/*' + action + '?jsonp=?', params, cb);
					},
					play:function(f){
						return this.call('play', { f: f });
					},
					getData:function(cb){
						return this.call('movies', cb);
					},
					searchImdb:function(f, q, cb){
						return this.call('searchImdb', { f: f, q:q }, cb);
					},
					setMatch: function(f, id){
						return this.call('setMatch', {f:f || '', id:id || ''}, function(o){
							setData(o);
						});
					}
				};
				
				var movies = $('#movies');
				var modal = $('#modal');
				var btUnmatched = $('#btunmatched');
				var templates = $('#templates');
				//Usefull to test/edit layout
				var base = window.location.href.indexOf('file://') === 0
					? 'http://localhost:8080' : '';
					
				function showModal(v){
					modal.empty().append(v);
					if(!modal.is(':visible'))
						modal.slideDown(200);
				}
				
				function hideModal(){
					if(modal.is(':visible'))
						modal.slideUp(200);
				}
				
				function match(files, index){
					index = index || 0;
					if(files.length <= index){
						hideModal();
						return;
					}
					var f = files[index];
					var v = getTemplate('matcher');
					$('.btskip', v).click(function(){
						match(files, index+1);
					});
					
					$('.btignore', v).click(function(){
						//todo: add to ignore list
						match(files, index+1);
					});
					var xhr;
					var field = $('[name=q]', v);
					var search = function(f, q){
						if(xhr)
							xhr.abort();
						xhr = srv.searchImdb(f, q, function(o){
							xhr = null;
							if(!field.val())
								field.val(o.Q);
							var div = $('.results', v).empty();
							var t = getTemplate('result');
							if(!o.Results.length)
								div.append($('<div/>').addClass('noresult').text('No result'));
							$.each(o.Results, function(k, r){
								var e = t.clone();
								$('.title', e).text(r.Title);
								$('.infos', e).text(r.Infos);
								e.click(function(){
									srv.setMatch(f, r.ImdbId);
									match(files, index+1);
								});
								div.append(e);
							});
						});
					};
					
					$('.file', v).text(f).click(function(){srv.play(f);});
					field.keypress(function(e){
						if((e.keyCode || e.which) != 13)
							return;
						search(f, field.val());
					});
					
					search(f);
					showModal(v);
				}
				
				function getTemplate(c){
					return $('.' + c, templates).clone();
				}
				
				function updateMovies(ms){
					movies.empty();
					var template = getTemplate('movieclassic');
					var t1 = $.now();
                    for(var i in ms) {
                        var m = ms[i];
                        var e = template.clone().data('m', m);
                        $('.cover', e).attr('src', base + '/*scale/300x/' + (m.Cover ? 'covers/' + m.Cover : 'img/nocover.jpg'));
                        $('h2', e).text(m.Title + (m.Year ? ' - ' + m.Year : ''));
                        $('.directors', e).text('By: ' + m.Directors.join(' - ')).toggle(!!m.Directors.length);
                        $('.principals', e).text('With: ' + m.Principals.join(' - ')).toggle(!!m.Principals.length);
						$('.genres', e).text(m.Genres.join(' - '));
						$('.plot', e).text(m.Plot);
                        $('.allocine', e).attr('href', 'http://www.google.fr/search?' + $.param({hl:'fr', btnI:'J\'ai de la chance', q:
                            'site:allocine.fr/film ' + m.Title}));
						$('.star', e).text((m.ImdbRating || 'No rating')+ ' on IMDB').attr('href', 'http://imdb.com/title/' + m.ImdbId);
						$('.showfiles', e).text(m.Files.length + ' file' + (m.Files.length > 1 ? 's':''))
						
                        movies.append(e);
                    }
					console.log('rendered ' + ms.length + ' elements in ' + ($.now() - t1) + 'ms');
				}
				
				function setData(data){
					var d1 = new Date().getTime();
					updateMovies(data.Movies);
					btUnmatched
						.text(data.Unmatched.length + ' unmatched')
						.toggle(data.Unmatched.length ? true : false).unbind().click(function(){
							match(data.Unmatched);
						});
					$('.refreshtime').text(new Date().getTime() - d1);
				}
				
				//live events
				$('.showfiles', movies).live('click', function () {
				    var e = $(this);
				    var div = $('.files', e.closest('.content'));
				    var files = e.m().Files;
				    if (div.is(':empty')) {
				        $.each(files, function (i, v) {
				            $('<a/>').addClass('file').text(v).click(function () {
				                srv.play(v);
				            }).appendTo(div);
				        });
				    }
				    div.slideToggle(Math.min(500, files.length * 20));
				});

				$('.delmatch', movies).live('click', function () {
				    var m = $(this).m();
				    srv.setMatch(null, m.ImdbId);
				});

				$('.play', movies).live('click', function () {
					srv.play($(this).m().Files[0]);
				});
				
				var refresh = function(){
					srv.getData(function (o) {
						setData(o);
					});
				};
				
				$('.btrefresh').click(refresh);
				
				refresh();
                
            });
        </script>
    </body>
</html>
